---
- hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Set executable user permissions on rc.local
      file:
        path: /etc/rc.d/rc.local
        owner: root
        group: root
        mode: 0744
    - name: Create /root/bin directory
      file:
        path: /root/bin
        state: directory
    - name: Install prereq packages for Foreman
      yum:
        state: present
        name:
          - libnl3
          - python3-m2crypto 
          - python3-dmidecode 
          - python3-ethtool 
          - python3-inotify 
          - subscription-manager
          - python3-subscription-manager-rhsm
          - subscription-manager-rhsm-certificates 
          - usermode
    - name: Install additional packages
      yum:
        state: present
        name:
          - selinux-policy-devel
          - vim
    # 3.4.1 Ensure Firewall software is installed
    - name: Install firewalld
      yum:
        name: firewalld
        state: latest
    # 3.4.2.5 Ensure unnecessary services and ports are not accepted
    - name: "Copy service files"
      copy:
        src: "{{ item }}"
        dest: /etc/firewalld/services/
        owner: root
        group: root
        mode: 0644
      with_items:
        - ncpa.xml
        - nessus.xml
        - ssh.xml
    - name: "Copy zone file"
      copy:
        src: "{{ item }}"
        dest: /etc/firewalld/zones/
        owner: root
        group: root
        mode: 0644
      with_items:
        - hipaa.xml
    # 3.4.2.1 Ensure firewalld service is enabled and running
    - name: "Enable and restart firewalld"
      systemd:
        name: firewalld
        enabled: yes
        state: restarted
    # 3.4.2.3 Ensure default zone is set 
    - name: "Set default zone"
      shell: "firewall-cmd --set-default-zone hipaa"
    # 1.8.1.2 Ensure local login warning banner is configured properly
    - name: Set login banner - issue
      copy:
        src: banner.txt
        dest: /etc/issue
        owner: root
        group: root
        mode: '0600'
    - name: Set login banner - motd
      copy:
        src: banner.txt
        dest: /etc/motd
        owner: root
        group: root
        mode: '0600'
    # 4.2.1.1 Ensure rsyslog is installed
    - name: Install rsyslog
      yum:
        state: present
        name:
          - rsyslog
    # 4.2.1.2 Ensure rsyslog Service is enabled
    - name: Start rsyslog
      systemd:
        name: rsyslog
        enabled: yes
        state: started 
    # 4.1.3 Ensure changes to system administration scope (sudoers) is collected
    # 4.1.4 Ensure login and logout events are collected
    # 4.1.5 Ensure session initiation information is collected
    # 4.1.6 Ensure events that modify date and time information are collected
    # 4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected 
    # 4.1.8 Ensure events that modify the system's network environment are collected
    # 4.1.9 Ensure discretionary access control permission modification events are collected
    # 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected
    # 4.1.11 Ensure events that modify user/group information are collected
    # 4.1.12 Ensure successful file system mounts are collected
    # 4.1.14 Ensure file deletion events by users are collected 
    # 4.1.15 Ensure kernel module loading and unloading is collected 
    # 4.1.16 Ensure system administrator actions (sudolog) are collected
    # 4.1.17 Ensure the audit configuration is immutable
    # - name: Copy over audit rules file
    #   copy:
    #     src: sdsc-hipaa.rules
    #     dest: /etc/audit/rules.d/sdsc-hipaa.rules
    #     owner: root
    #     group: root
    #     mode: '0644'
    # - name: "Find setuid-setgid files"
    #   shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
    #   register: found_setuid_setgid
    # - name: "Create rules file"
    #   file:
    #     path: /etc/audit/rules.d/setuid-setgid.rules
    #     state: touch
    # # 4.1.13 Ensure use of privileged commands is collected
    # - name: "Add lines to rules file"
    #   lineinfile:
    #     path: /etc/audit/rules.d/setuid-setgid.rules
    #     line: '-a always,exit -F path={{ item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged'
    #   with_items: "{{ found_setuid_setgid.stdout_lines }}" 
    - name: "Install fix-sudoers script"
      copy:
        src: fix-sudoers
        dest: /root/bin/
        owner: root
        group: root
        mode: 0700
    - name: "Run fix-sudoers script"
      shell : "/root/bin/fix-sudoers"
    # 5.2.3 Ensure permissions on SSH private host key files are configured
    - name: Set root ownership on server private SSH key files
      shell: 
        cmd: find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:root {} \;
    - name: Set file mode permissions on server private SSH key files
      shell: 
        cmd: find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod 0600 {} \;
    # 5.2.4 Ensure permissions on SSH public host key files are configured
    - name: Set root ownership on server public SSH key files
      shell: 
        cmd: find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod 0644 {} \;
    - name: Set file mode permissions on server public SSH key files
      shell: 
        cmd: find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \;
    # 1.8.1.3 Ensure remote login warning banner is configured properly
    - name: Ensure remote login warning banner /etc/issue.net
      copy:
        src: issue
        dest: /etc/issue.net
        owner: root
        group: root
        mode: 0644
    - name: Ensure remote login warning banner /etc/issue
      copy:
        src: issue
        dest: /etc/issue
        owner: root
        group: root
        mode: 0644
    # 1.3.1 Ensure AIDE is installed 
    - name: Install AIDE
      yum:
        name: aide
        state: latest
    - name: Copy aide.conf
      copy:
        src: aide.conf
        dest: /etc/aide.conf
        owner: root
        group: root
        mode: 0600
    - name: Check for AIDE database
      stat: path=/var/lib/aide/aide.db.gz
      register: aide_db
    - name: Initialize the AIDE database
      shell: "aide --init"
      when: not aide_db.stat.exists
    - name: Move the new AIDE database
      shell: "mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz"
      when: not aide_db.stat.exists
    # # 1.3.2 Ensure filesystem integrity is regularly checked
    # - name: Add AIDE cron job
    #   cron:
    #     name: "Run AIDE check"
    #     job: "/usr/sbin/aide --check"
    #     minute: "5"
    #     hour: "4"
    # 6.2.7 Ensure users' home directories permissions are 750 or more restrictive
    # During an audit, it was found that /home/cwagent did not exist
    - name: Register for Ansible check if user cwagent found
      shell: "cat /etc/passwd | grep cwagent | awk -F : '{print $1}'"
      register: user_cwagent
    - name: Create cwagent home dir
      when: '"cwagent" in user_cwagent.stdout_lines'
      file:
        path: /home/cwagent
        state: directory
        owner: cwagent
        group: cwagent
        mode: '0700'
    # 5.5.1.2 Ensure minimum days between password changes is 7 or more
    - name: Ensure minimum days between password changes is 7
      lineinfile:
        path: /etc/login.defs
        regexp: '^PASS_MIN_DAYS'
        line: 'PASS_MIN_DAYS 7'
        backrefs: yes
    # 5.4.5 Ensure default user shell timeout is 900 seconds or less
    - name: Ensure default user shell timeout is 600 seconds in /etc/bashrc
      lineinfile:
        path: /etc/bashrc
        line: TMOUT=600
    - name: Ensure default user shell timeout is 600 seconds in /etc/profile
      lineinfile:
        path: /etc/profile
        line: TMOUT=600
